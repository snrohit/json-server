{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/forms.js","redux/dishes.js","redux/comment.js","redux/promotions.js","redux/leaders.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","onClick","to","id","width","CardImgOverlay","Menu","menu","dishes","map","key","console","log","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","comment","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","size","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","value","color","Component","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","offset","check","checkbox","About","RenderLeader","Media","left","object","body","heading","RenderContent","leaders","CardHeader","title","list","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","class","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","addComment","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newComment","toISOString","method","JSON","stringify","headers","credentials","newFeedback","InitialFeedback","Dishes","action","Comments","concat","Promotions","Leaders","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52a81e6f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: \"scale(0.5) translateY(-50%)\"\r\n        }}\r\n      >\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? (\r\n              <CardSubtitle>{item.designation}</CardSubtitle>\r\n            ) : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n}\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.dish}\r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.promotion}\r\n            isLoading={props.promoLoading}\r\n            errMess={props.promoErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.leader}\r\n            isLoading={props.leaderLoading}\r\n            errMess={props.leaderErrMess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","\r\nimport React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    // function RenderMenuItem (props) {}\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card> \r\n                <Link to={`/menu/${dish.id}`} >\r\n                  <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />                \r\n                        <CardImgOverlay>\r\n                            <CardTitle> {dish.name} </CardTitle>\r\n                        </CardImgOverlay>  \r\n                </Link>      \r\n            </Card>\r\n        );\r\n    }\r\n\r\n    // function Menu (props) {}\r\n    const Menu = (props) => {\r\n        // map (JS keyword): iterating over every dish in the dishes array here\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n\r\n            if (props.dishes.isLoading) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">            \r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (props.dishes.errMess) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\"> \r\n                            <div className=\"col-12\">\r\n                                <h4>{props.dishes.errMess}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            return (\r\n                // key: every item require key attribute to specift it.\r\n                // the key helps React to recognise each one of these elements, uniquely. \r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>    \r\n            );\r\n        }); // take the JS objects\r\n\r\n        console.log('Menu component render invoked')\r\n\r\n         // return what needs to diaplay on the UI in this conponent. (return view)\r\n        return ( \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem> <Link to='home'>Home</Link> </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>    \r\n                </div>    \r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Menu;","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\n/*import { baseUrl } from \"../shared/baseUrl\"; */\r\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\"; \r\nimport { baseUrl } from '../shared/baseUrl';\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.postComment(\r\n      this.props.dishId,\r\n      values.rating,\r\n      values.author,\r\n      values.comment\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil\" /> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={this.handleSubmit}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={12}>\r\n                  Rating\r\n                </Label>\r\n                <Col md={{ size: 12 }}>\r\n                  <Control.select\r\n                    model=\".rating\"\r\n                    name=\"rating\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" md={12}>\r\n                  Your Name\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\" md={12}>\r\n                  Comment\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows={5}\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n  return (\r\n    <div className=\"col-12 col-md-5 m-1\">\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: \"scale(0.5) translateY(-50%)\"\r\n        }}\r\n      >\r\n        <Card>\r\n             <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n  if (comments != null) {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4>Comments</h4>\r\n        <Stagger in>\r\n          {comments.map(comment => {\r\n            return (\r\n              <Fade in key={comment.id}>\r\n                <li key={comment.id}>\r\n                  <p>{comment.comment}</p>\r\n                  <p>\r\n                    -- {comment.author} ,{\" \"}\r\n                    {new Intl.DateTimeFormat(\"en-US\", {\r\n                      year: \"numeric\",\r\n                      month: \"short\",\r\n                      day: \"2-digit\"\r\n                    }).format(new Date(Date.parse(comment.date)))}\r\n                  </p>\r\n                </li>\r\n              </Fade>\r\n            );\r\n          })}\r\n        </Stagger>\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n    );\r\n  } else return <div />;\r\n}\r\n\r\nconst DishDetail = props => {\r\n if (props.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    ); \r\n } else   if (props.dish != null)\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderDish dish={props.dish} />\r\n          <RenderComments\r\n            comments={props.comments}\r\n            postComment={props.postComment}\r\n            dishId={props.dish.id}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default DishDetail;","import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Label\r\n} from \"reactstrap\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\nconst isNumber = val => !isNaN(Number(val));\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.props.resetFeedbackForm();\r\n    this.props.postFeedback(\r\n      values.firstname,\r\n      values.lastname,\r\n      values.telnum,\r\n      values.email,\r\n      values.agree,\r\n      values.contactType,\r\n      values.message\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={values => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 numbers\",\r\n                      maxLength: \"Must be 15 numbers or less\",\r\n                      isNumber: \"Must be a number\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      validEmail: \"Invalid Email Address\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />{\" \"}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows={12}\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Media\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\nfunction About(props) {\r\n  function RenderLeader({ leader }) {\r\n    return (\r\n      <Media className=\"mt-5\">\r\n        <Media left className=\"mr-5\">\r\n          <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n        </Media>\r\n        <Media body>\r\n          <Media heading>{leader.name}</Media>\r\n          <p>{leader.designation}</p>\r\n          {leader.description}\r\n        </Media>\r\n      </Media>\r\n    );\r\n  }\r\n\r\n  function RenderContent({ leaders, isLoading, errMess }) {\r\n    if (isLoading) {\r\n      return <Loading />;\r\n    } else if (errMess) {\r\n      return <h4>{errMess}</h4>;\r\n    } else\r\n      return (\r\n        <Stagger in>\r\n          {props.leaders.map(leader => (\r\n            <Fade in key={leader.id}>\r\n              <RenderLeader key={leader.id} leader={leader} />\r\n            </Fade>\r\n          ))}\r\n        </Stagger>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h2>Our History</h2>\r\n          <p>\r\n            Started in 2010, Ristorante con Fusion quickly established itself as\r\n            a culinary icon par excellence in Hong Kong. With its unique brand\r\n            of world fusion cuisine that can be found nowhere else, it enjoys\r\n            patronage from the A-list clientele in Hong Kong. Featuring four of\r\n            the best three-star Michelin chefs in the world, you never know what\r\n            will arrive on your plate the next time you visit us.\r\n          </p>\r\n          <p>\r\n            The restaurant traces its humble beginnings to{\" \"}\r\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-5\">\r\n          <Card>\r\n            <CardHeader className=\"bg-primary text-white\">\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className=\"row p-1\">\r\n                <dt className=\"col-6\">Started</dt>\r\n                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                <dd className=\"col-6\">$1,250,375</dd>\r\n                <dt className=\"col-6\">Employees</dt>\r\n                <dd className=\"col-6\">40</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Card>\r\n            <CardBody className=\"bg-faded\">\r\n              <blockquote className=\"blockquote\">\r\n                <p className=\"mb-0\">\r\n                  You better cut the pizza in four pieces because I'm not hungry\r\n                  enough to eat six.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                  Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                    2014\r\n                  </cite>\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h2>Corporate Leadership</h2>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Media list>\r\n            <RenderContent\r\n              leaders={props.leader}\r\n              isLoading={props.leaderLoading}\r\n              errMess={props.leaderErrMess}\r\n            />\r\n          </Media>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler,Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom'\r\nclass Header extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = { \r\n            isNavOpen : false,\r\n            isModalOpen: false\r\n        }\r\n        this.toggleNav=this.toggleNav.bind(this);\r\n        this.toggleModal=this.toggleModal.bind(this);\r\n         this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n    toggleNav(){\r\n       this.setState({\r\n        isNavOpen: !this.state.isNavOpen\r\n       });\r\n    }\r\n\r\n    toggleModal(){\r\n       this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n       });\r\n    }\r\n\r\n       handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n    render() { \r\n        return ( \r\n            <>\r\n            <Navbar dark expand=\"md\">\r\n            <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\r\n            <NavbarBrand  className=\"mr-auto\"href=\"/\">\r\n            <img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n            <Nav navbar >\r\n                <NavItem>\r\n                    <NavLink class=\"nav-link\" to='/home'>\r\n                        <span className=\"fa fa-home fa-lg\"> Home </span>\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink class=\"nav-link\" to='/aboutus'>\r\n                        <span className=\"fa fa-info fa-lg\"> About Us </span>\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink class=\"nav-link\" to='/menu'>\r\n                        <span className=\"fa fa-list fa-lg\"> Menu</span>\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink class=\"nav-link\" to='/contactus'>\r\n                        <span className=\"fa fa-address-card fa-lg\"> Contact Us</span>\r\n                    </NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n            <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n            <Button outline onClick={this.toggleModal}>\r\n            <span className=\"fa fa-sign-in fa-lg\"></span> Login \r\n            </Button>\r\n            </NavItem>\r\n            </Nav>\r\n            </Collapse>\r\n            </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row row-header\"> \r\n                <div className=\"col-12 col-sm-6\">\r\n                    <h1>\r\n                    Ristorante Con Fusion\r\n                    </h1>\r\n                    <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>\r\n            Login\r\n            </ModalHeader>\r\n            <ModalBody>\r\n\r\n             <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n            </ModalBody>\r\n            </Modal>\r\n            </>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n      );\r\n}\r\n \r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const postFeedback = (\r\n  firstname,\r\n  lastname,\r\n  telnum,\r\n  email,\r\n  agree,\r\n  contactType,\r\n  message\r\n) => dispatch => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response =>\r\n      alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n    )\r\n    .catch(error => {\r\n      console.log(\"post feedbacks\", error.message);\r\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n    });\r\n};","export const ADD_COMMENT ='ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"react-redux-form\";\r\nimport Home from \"./HomeComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishdetailComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport AboutUs from \"./AboutComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport {\r\n  postComment,\r\n  postFeedback,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders\r\n} from \"../redux/ActionCreators\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (\r\n    firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message\r\n  ) =>\r\n    dispatch(\r\n      postFeedback(\r\n        firstname,\r\n        lastname,\r\n        telnum,\r\n        email,\r\n        agree,\r\n        contactType,\r\n        message\r\n      )\r\n    )\r\n});\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(promo => promo.featured)[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={\r\n            this.props.leaders.leaders.filter(leader => leader.featured)[0]\r\n          }\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              dish => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter(\r\n            comment => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          addComment={this.props.addComment}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <TransitionGroup>\r\n            <CSSTransition\r\n              key={this.props.location.key}\r\n              classNames=\"page\"\r\n              timeout={300}\r\n            >\r\n              <Switch location={this.props.location}>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route\r\n                  exact\r\n                  path=\"/aboutus\"\r\n                  component={() => (\r\n                    <AboutUs\r\n                      leaders={this.props.leaders.leaders}\r\n                      leaderLoading={this.props.leaders.isLoading}\r\n                      leaderErrMess={this.props.leaders.errMess}\r\n                    />\r\n                  )}\r\n                />\r\n                {/* } /> */}\r\n                <Route\r\n                  exact\r\n                  path=\"/menu\"\r\n                  component={() => <Menu dishes={this.props.dishes} />}\r\n                />\r\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                <Route\r\n                  exact\r\n                  path=\"/contactus\"\r\n                  component={() => (\r\n                    <Contact\r\n                      resetFeedbackForm={this.props.resetFeedbackForm}\r\n                      postFeedback={this.props.postFeedback}\r\n                    />\r\n                  )}\r\n                />\r\n                <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Main)\r\n);","export const InitialFeedback = {\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    telnum: \"\",\r\n    email: \"\",\r\n    agree: false,\r\n    contactType: \"Tel.\",\r\n    message: \"\"\r\n  };","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from \"./ActionTypes\";;\r\n\r\nexport const Leaders = (\r\n    state = {\r\n      isLoading: true,\r\n      errMess: null,\r\n      leaders: []\r\n    },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_LEADERS:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          errMess: null,\r\n          leaders: action.payload\r\n        };\r\n  \r\n      case ActionTypes.LEADERS_LOADING:\r\n        return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n  \r\n      case ActionTypes.LEADERS_FAILED:\r\n        return { ...state, isLoading: false, errMess: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import React, {Component} from 'react'; \nimport './App.css';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App  extends Component {\n\n  render() { \n    return (\n        <Provider store={store}>\n      <BrowserRouter>\n      <div >\n    <Main></Main>\n     \n    </div>\n    </BrowserRouter>\n    </Provider>\n      );\n  }\n}\n \n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { createForms } from \"react-redux-form\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport { InitialFeedback } from \"./forms\";\r\nimport { Dishes } from \"./dishes\";\r\nimport { Comments } from \"./comment\";\r\nimport { Promotions } from \"./promotions\";\r\nimport { Leaders } from \"./leaders\";\r\n\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      dishes: Dishes,\r\n      comments :Comments,\r\n      promotions: Promotions,\r\n      leaders: Leaders,\r\n      ...createForms({\r\n        feedback: InitialFeedback\r\n      })\r\n    }),\r\n    applyMiddleware(thunk, logger)\r\n  );\r\n\r\n  return store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}